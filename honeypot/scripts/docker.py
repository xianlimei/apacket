#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import zlib
import base64

_version = 'eJxMj0GP0zAQhe+W8h+sOYGIXdvYbTK3sgsFllVXIuIeskPX4NiR46JFiP+OGpDS65v35nvvfdc9bLTU3CjFj3cV209efKE8+xSRa2nait2kWCgW0f2aCHk/TcEPffEpbr7PKVbsNg0/KIu3zxNlP1IsfUD+rQ8zVew4lyUVfDw/V+wz5Z+Ukf+LbPROKieVGIi/WBwvK3bbF0L+Lvuaqy3/eA7cKN1wbdAatI4f7ru10ieKp/KE3Bi3iJGGsjQfQrrgK/Yb/q8BhBUHNewnf3WRpoUa7n3cP3y4lrWBGg6+3KRx9AUQmnbrmq+XB4e0Gk9Jy510UMNxBoRly4WRhydA6MfHrYUa7ihHCmvKSiuVsE6cKFL2A9Tw5uzDY+dHAgSj9E4oJ5TtjEGt0Fm5fd1o3VqtXymFSsEf9jcAAP//pPaB9g=='

_containers = 'eJzs2F9vG8cRAPB3AvwOxD61AC3OzP6/NyNOE7d2ItRu+xAYwuzuLHUxdUfcHWMLhr57cbRcS3UEWH4QXDdvvNnZ4fF2f5wlf3z58nSDJ7gigNXPf1suHu/bR/+UYWz7rlnhCcXl4ru+m6SbHr283Euz4v1+12ae2r7b/Dr23XLxpM+vZXj0/du9DO2FdBPvmlXl3SjLxc/jdJy1a7vD2+XihQy/ydCs3k/ZoD8BewKPsqz+dMz483LxhCdpVn8Z2vUK3Oqvh92KAMMKqTHUGLv64fnL5eLlwN1Y5zftcl/abtus8vmhey1luVgu0BIuF7+8U0+LahRJScABAycNHjUQgDM21lKNqRTZYvGajWhfqjXW+GC1deIrsfZEaq1+4gsZVfOL2pR2nAbOk5Sz8ZzfqFdr9fSCt6IadUiHbjqo68DTJ6pR4zmTdY2xxNGVgFkDoxhyKZMFQ4Gc5hwz62p8jqlCcDV4VxBz0jFX61kkq7X6rr+44G7+OJvUdpvE4/kcHYQnKapBq8GRC0BrddoP03yzr9bqGSfZjap5d7VWLyae5tscDl3Xdlv1PnIYVaP+sV/RqvDlqNbqx36cvuu72m5V8079JNObfnj9vC/z1DS0ZSvqav0h/kKmqe22443U4+vrxOadenr6+PmHct1ht1urZ203J72/eLxreZT/XF7XOD47sRkSGA/OpliSdaQlpcIMhU3QmXxNPlKMVYS9hJqNk+gETU2BY1Fr9X1X9n3bTcd6XBm9YTAR2aLXyNkSOV0AMGkPOUUW50LWkp2NBStYcoF1ZjHRe7VWP/Akb/hSNQo9ncyb9wTn9T59XMog43hzwB8HTgep7dtn0qkG3Rz4zX0sMlfc9Yl3c/hjiVvhGwVgrZ5z/pgHRxGcG8QGoAGvrq6u1up5f+iO6/9OzWDnZWu7+Wm86A9Dnq83Q99Pm5PxuIWeyDi13ZHzPDRd7D+MXC+6Wqu//0s103CQtTod+j1vP2Srq1dX62tlkF0mZxmy1Sm5ANqjjoZjiRqrc4LVWNGRcymWvQ5gsIaocxJy5G4r2/Jux910diFd242vL28yS4fxMvVvf89ZyAExGZasbSUbracC1UcCnzI4H0o12WsnItlCyrFK1l5K1I6NJ/7U2afKLBK4+IXKzOcoK1L5sJv+R5kZ46qpMRfDgSSLTt464x1Css5ZcJjQQcxQYnXOU2LnavSRNTNk1vdk5h6cmbsXs98Xdj3yOcLWd9eXKW/uRDyO52cy5Xs7DtqHGJMxOHOF4oCis0FLLWxFa4tgaybDMZI2VueanOGQEXQOAcstx3vhLPWwO+v6YTrPh2n6yiSD/0PyXZJTCYRBay4pQIwuhcoVkUgIU4olVqxGFwLEWEHYpFIKk4YCWsC7e0q2Dy7ZftuSLZRSTSoOspgE2ifLEW3RtjI5541HawJD4OS11lhjNQypgtVYvLsteZRBOjmTw06Gr8owRvulZ97/A8MmQskcgUkXH2vMxMyu6gTZuOrAJqTqrKWsBW0lKiUwFdEWEJO/bzc2D27YfNuGa4reFe8xog0WfSiEFDNTsVQyZMAQkZNOGGryughZp4VSherI2HTLsPBWhrNfudt+TT9bLWJA/IPwXYRL9TlQwSI5EQE6w1ayEQnRE5KOWiAShRDFaUYWXaONVXRy4mM09ySsH5yw/i/CN3a/LbYwG86eMnubtc9GIqJxlIVitto7FCq2SAwk4Mx8Fg2Fc0SwfPssOnCe2sy7s7G7LLe72AMZyOfzV81qc9FNqzs9gAlRhy/0EL/5v3F8TsRW2/nMoB1UtFZCDDoY0T5qsdGKjxBL0SZAMaxrSmiDr5KgerknB3pwDvTZHe3TVnPRfW4je3X1arFcwHKxXPw7AAD//6qVo48='

def decode(payload):
    bs = base64.b64decode(payload)
    ds = zlib.decompress(bs)
    return ds

def version():
    return decode(_version)

def containers():
    return decode(_containers)

if __name__ == '__main__':
    print version()
    print containers()
